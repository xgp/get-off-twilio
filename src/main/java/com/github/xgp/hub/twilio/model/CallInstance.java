/*
 * Twilio
 * Enabling phones, VoIP, and messaging to be embedded into web, desktop, and mobile software.
 *
 * OpenAPI spec version: 2010-04-01
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.xgp.hub.twilio.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Objects;
import javax.validation.constraints.*;

/** CallInstance */
@javax.annotation.Generated(
    value = "io.swagger.codegen.v3.generators.java.JavaJerseyDIServerCodegen",
    date = "2020-05-22T20:43:20.517+02:00[Europe/Paris]")
public class CallInstance {
  @JsonProperty("account_sid")
  private String accountSid = null;

  /**
   * If this call was initiated with answering machine detection, either human or machine. Empty
   * otherwise.
   */
  public enum AnsweredByEnum {
    NULL("null"),

    HUMAN("human"),

    MACHINE("machine");

    private String value;

    AnsweredByEnum(String value) {
      this.value = value;
    }

    @Override
    @JsonValue
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AnsweredByEnum fromValue(String text) {
      for (AnsweredByEnum b : AnsweredByEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("answered_by")
  private AnsweredByEnum answeredBy = AnsweredByEnum.NULL;

  @JsonProperty("api_version")
  private String apiVersion = null;

  @JsonProperty("caller_name")
  private String callerName = null;

  @JsonProperty("date_created")
  private String dateCreated = null;

  @JsonProperty("date_updated")
  private String dateUpdated = null;

  /**
   * A string describing the direction of the call. inbound for inbound calls, outbound-api for
   * calls initiated via the REST API or outbound-dial for calls initiated by a &lt;Dial&gt; verb.
   */
  public enum DirectionEnum {
    INBOUND("inbound"),

    OUTBOUND_API("outbound-api"),

    OUTBOUND_DIAL("outbound-dial");

    private String value;

    DirectionEnum(String value) {
      this.value = value;
    }

    @Override
    @JsonValue
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DirectionEnum fromValue(String text) {
      for (DirectionEnum b : DirectionEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("direction")
  private DirectionEnum direction = null;

  @JsonProperty("duration")
  private String duration = null;

  @JsonProperty("end_time")
  private String endTime = null;

  @JsonProperty("forwarded_from")
  private String forwardedFrom = null;

  @JsonProperty("from")
  private String from = null;

  @JsonProperty("parent_call_sid")
  private String parentCallSid = null;

  @JsonProperty("phone_number_sid")
  private String phoneNumberSid = null;

  @JsonProperty("price")
  private String price = null;

  @JsonProperty("price_unit")
  private String priceUnit = null;

  @JsonProperty("sid")
  private String sid = null;

  @JsonProperty("start_time")
  private String startTime = null;

  /** A string representing the status of the call. */
  public enum StatusEnum {
    QUEUED("queued"),

    RINGING("ringing"),

    IN_PROGRESS("in-progress"),

    CANCELED("canceled"),

    COMPLETED("completed"),

    FAILED("failed"),

    BUSY("busy"),

    NO_ANSWER("no-answer");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @Override
    @JsonValue
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("status")
  private StatusEnum status = null;

  @JsonProperty("subresource_uris")
  private Object subresourceUris = null;

  @JsonProperty("to")
  private String to = null;

  @JsonProperty("uri")
  private String uri = null;

  public CallInstance accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The unique id of the Account responsible for creating this call.
   *
   * @return accountSid
   */
  @JsonProperty("account_sid")
  @Schema(description = "The unique id of the Account responsible for creating this call.")
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }

  public CallInstance answeredBy(AnsweredByEnum answeredBy) {
    this.answeredBy = answeredBy;
    return this;
  }

  /**
   * If this call was initiated with answering machine detection, either human or machine. Empty
   * otherwise.
   *
   * @return answeredBy
   */
  @JsonProperty("answered_by")
  @Schema(
      description =
          "If this call was initiated with answering machine detection, either human or machine. Empty otherwise.")
  public AnsweredByEnum getAnsweredBy() {
    return answeredBy;
  }

  public void setAnsweredBy(AnsweredByEnum answeredBy) {
    this.answeredBy = answeredBy;
  }

  public CallInstance apiVersion(String apiVersion) {
    this.apiVersion = apiVersion;
    return this;
  }

  /**
   * Get apiVersion
   *
   * @return apiVersion
   */
  @JsonProperty("api_version")
  @Schema(description = "")
  public String getApiVersion() {
    return apiVersion;
  }

  public void setApiVersion(String apiVersion) {
    this.apiVersion = apiVersion;
  }

  public CallInstance callerName(String callerName) {
    this.callerName = callerName;
    return this;
  }

  /**
   * If this call was an incoming call to a phone number with Caller ID Lookup enabled, the
   * caller&#x27;s name. Empty otherwise.
   *
   * @return callerName
   */
  @JsonProperty("caller_name")
  @Schema(
      description =
          "If this call was an incoming call to a phone number with Caller ID Lookup enabled, the caller's name. Empty otherwise.")
  public String getCallerName() {
    return callerName;
  }

  public void setCallerName(String callerName) {
    this.callerName = callerName;
  }

  public CallInstance dateCreated(String dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  /**
   * GMT in RFC 2822 format.
   *
   * @return dateCreated
   */
  @JsonProperty("date_created")
  @Schema(description = "GMT in RFC 2822 format.")
  public String getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(String dateCreated) {
    this.dateCreated = dateCreated;
  }

  public CallInstance dateUpdated(String dateUpdated) {
    this.dateUpdated = dateUpdated;
    return this;
  }

  /**
   * Get dateUpdated
   *
   * @return dateUpdated
   */
  @JsonProperty("date_updated")
  @Schema(description = "")
  public String getDateUpdated() {
    return dateUpdated;
  }

  public void setDateUpdated(String dateUpdated) {
    this.dateUpdated = dateUpdated;
  }

  public CallInstance direction(DirectionEnum direction) {
    this.direction = direction;
    return this;
  }

  /**
   * A string describing the direction of the call. inbound for inbound calls, outbound-api for
   * calls initiated via the REST API or outbound-dial for calls initiated by a &lt;Dial&gt; verb.
   *
   * @return direction
   */
  @JsonProperty("direction")
  @Schema(
      description =
          "A string describing the direction of the call. inbound for inbound calls, outbound-api for calls initiated via the REST API or outbound-dial for calls initiated by a <Dial> verb.")
  public DirectionEnum getDirection() {
    return direction;
  }

  public void setDirection(DirectionEnum direction) {
    this.direction = direction;
  }

  public CallInstance duration(String duration) {
    this.duration = duration;
    return this;
  }

  /**
   * The length of the call in seconds.
   *
   * @return duration
   */
  @JsonProperty("duration")
  @Schema(description = "The length of the call in seconds.")
  public String getDuration() {
    return duration;
  }

  public void setDuration(String duration) {
    this.duration = duration;
  }

  public CallInstance endTime(String endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Given as GMT in RFC 2822 format.
   *
   * @return endTime
   */
  @JsonProperty("end_time")
  @Schema(description = "Given as GMT in RFC 2822 format.")
  public String getEndTime() {
    return endTime;
  }

  public void setEndTime(String endTime) {
    this.endTime = endTime;
  }

  public CallInstance forwardedFrom(String forwardedFrom) {
    this.forwardedFrom = forwardedFrom;
    return this;
  }

  /**
   * If this call was an incoming call forwarded from another number, the forwarding phone number
   * (depends on carrier supporting forwarding). Empty otherwise.
   *
   * @return forwardedFrom
   */
  @JsonProperty("forwarded_from")
  @Schema(
      description =
          "If this call was an incoming call forwarded from another number, the forwarding phone number (depends on carrier supporting forwarding). Empty otherwise.")
  public String getForwardedFrom() {
    return forwardedFrom;
  }

  public void setForwardedFrom(String forwardedFrom) {
    this.forwardedFrom = forwardedFrom;
  }

  public CallInstance from(String from) {
    this.from = from;
    return this;
  }

  /**
   * The phone number, SIP address or Client identifier that made this call. Phone numbers are in
   * E.164 format (e.g. +16175551212).
   *
   * @return from
   */
  @JsonProperty("from")
  @Schema(
      description =
          "The phone number, SIP address or Client identifier that made this call. Phone numbers are in E.164 format (e.g. +16175551212).")
  public String getFrom() {
    return from;
  }

  public void setFrom(String from) {
    this.from = from;
  }

  public CallInstance parentCallSid(String parentCallSid) {
    this.parentCallSid = parentCallSid;
    return this;
  }

  /**
   * Get parentCallSid
   *
   * @return parentCallSid
   */
  @JsonProperty("parent_call_sid")
  @Schema(description = "")
  @Size(min = 34, max = 34)
  public String getParentCallSid() {
    return parentCallSid;
  }

  public void setParentCallSid(String parentCallSid) {
    this.parentCallSid = parentCallSid;
  }

  public CallInstance phoneNumberSid(String phoneNumberSid) {
    this.phoneNumberSid = phoneNumberSid;
    return this;
  }

  /**
   * If the call was inbound, this is the Sid of the IncomingPhoneNumber that received the call. If
   * the call was outbound, it is the Sid of the OutgoingCallerId from which the call was placed.
   *
   * @return phoneNumberSid
   */
  @JsonProperty("phone_number_sid")
  @Schema(
      description =
          "If the call was inbound, this is the Sid of the IncomingPhoneNumber that received the call. If the call was outbound, it is the Sid of the OutgoingCallerId from which the call was placed.")
  public String getPhoneNumberSid() {
    return phoneNumberSid;
  }

  public void setPhoneNumberSid(String phoneNumberSid) {
    this.phoneNumberSid = phoneNumberSid;
  }

  public CallInstance price(String price) {
    this.price = price;
    return this;
  }

  /**
   * The charge for this call, in the currency associated with the account. Populated after the call
   * is completed. May not be immediately available.
   *
   * @return price
   */
  @JsonProperty("price")
  @Schema(
      description =
          "The charge for this call, in the currency associated with the account. Populated after the call is completed. May not be immediately available.")
  public String getPrice() {
    return price;
  }

  public void setPrice(String price) {
    this.price = price;
  }

  public CallInstance priceUnit(String priceUnit) {
    this.priceUnit = priceUnit;
    return this;
  }

  /**
   * The currency in which Price is measured, in ISO 4127 format.
   *
   * @return priceUnit
   */
  @JsonProperty("price_unit")
  @Schema(description = "The currency in which Price is measured, in ISO 4127 format.")
  public String getPriceUnit() {
    return priceUnit;
  }

  public void setPriceUnit(String priceUnit) {
    this.priceUnit = priceUnit;
  }

  public CallInstance sid(String sid) {
    this.sid = sid;
    return this;
  }

  /**
   * Get sid
   *
   * @return sid
   */
  @JsonProperty("sid")
  @Schema(description = "")
  @Size(min = 34, max = 34)
  public String getSid() {
    return sid;
  }

  public void setSid(String sid) {
    this.sid = sid;
  }

  public CallInstance startTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Given as GMT in RFC 2822 format.
   *
   * @return startTime
   */
  @JsonProperty("start_time")
  @Schema(description = "Given as GMT in RFC 2822 format.")
  public String getStartTime() {
    return startTime;
  }

  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }

  public CallInstance status(StatusEnum status) {
    this.status = status;
    return this;
  }

  /**
   * A string representing the status of the call.
   *
   * @return status
   */
  @JsonProperty("status")
  @Schema(description = "A string representing the status of the call.")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public CallInstance subresourceUris(Object subresourceUris) {
    this.subresourceUris = subresourceUris;
    return this;
  }

  /**
   * Get subresourceUris
   *
   * @return subresourceUris
   */
  @JsonProperty("subresource_uris")
  @Schema(description = "")
  public Object getSubresourceUris() {
    return subresourceUris;
  }

  public void setSubresourceUris(Object subresourceUris) {
    this.subresourceUris = subresourceUris;
  }

  public CallInstance to(String to) {
    this.to = to;
    return this;
  }

  /**
   * Phone numbers are in E.164 format (e.g. +16175551212). SIP addresses are formated as
   * name@company.com. Client identifiers are formatted client:name.
   *
   * @return to
   */
  @JsonProperty("to")
  @Schema(
      description =
          "Phone numbers are in E.164 format (e.g. +16175551212). SIP addresses are formated as name@company.com. Client identifiers are formatted client:name.")
  public String getTo() {
    return to;
  }

  public void setTo(String to) {
    this.to = to;
  }

  public CallInstance uri(String uri) {
    this.uri = uri;
    return this;
  }

  /**
   * The URI for this resource, relative to https://api.twilio.com
   *
   * @return uri
   */
  @JsonProperty("uri")
  @Schema(description = "The URI for this resource, relative to https://api.twilio.com")
  public String getUri() {
    return uri;
  }

  public void setUri(String uri) {
    this.uri = uri;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CallInstance callInstance = (CallInstance) o;
    return Objects.equals(this.accountSid, callInstance.accountSid)
        && Objects.equals(this.answeredBy, callInstance.answeredBy)
        && Objects.equals(this.apiVersion, callInstance.apiVersion)
        && Objects.equals(this.callerName, callInstance.callerName)
        && Objects.equals(this.dateCreated, callInstance.dateCreated)
        && Objects.equals(this.dateUpdated, callInstance.dateUpdated)
        && Objects.equals(this.direction, callInstance.direction)
        && Objects.equals(this.duration, callInstance.duration)
        && Objects.equals(this.endTime, callInstance.endTime)
        && Objects.equals(this.forwardedFrom, callInstance.forwardedFrom)
        && Objects.equals(this.from, callInstance.from)
        && Objects.equals(this.parentCallSid, callInstance.parentCallSid)
        && Objects.equals(this.phoneNumberSid, callInstance.phoneNumberSid)
        && Objects.equals(this.price, callInstance.price)
        && Objects.equals(this.priceUnit, callInstance.priceUnit)
        && Objects.equals(this.sid, callInstance.sid)
        && Objects.equals(this.startTime, callInstance.startTime)
        && Objects.equals(this.status, callInstance.status)
        && Objects.equals(this.subresourceUris, callInstance.subresourceUris)
        && Objects.equals(this.to, callInstance.to)
        && Objects.equals(this.uri, callInstance.uri);
  }

  @Override
  public int hashCode() {
    return Objects.hash(
        accountSid,
        answeredBy,
        apiVersion,
        callerName,
        dateCreated,
        dateUpdated,
        direction,
        duration,
        endTime,
        forwardedFrom,
        from,
        parentCallSid,
        phoneNumberSid,
        price,
        priceUnit,
        sid,
        startTime,
        status,
        subresourceUris,
        to,
        uri);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CallInstance {\n");

    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    answeredBy: ").append(toIndentedString(answeredBy)).append("\n");
    sb.append("    apiVersion: ").append(toIndentedString(apiVersion)).append("\n");
    sb.append("    callerName: ").append(toIndentedString(callerName)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateUpdated: ").append(toIndentedString(dateUpdated)).append("\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    forwardedFrom: ").append(toIndentedString(forwardedFrom)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    parentCallSid: ").append(toIndentedString(parentCallSid)).append("\n");
    sb.append("    phoneNumberSid: ").append(toIndentedString(phoneNumberSid)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    priceUnit: ").append(toIndentedString(priceUnit)).append("\n");
    sb.append("    sid: ").append(toIndentedString(sid)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    subresourceUris: ").append(toIndentedString(subresourceUris)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
