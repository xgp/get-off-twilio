/*
 * Twilio
 * Enabling phones, VoIP, and messaging to be embedded into web, desktop, and mobile software.
 *
 * OpenAPI spec version: 2010-04-01
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.xgp.hub.twilio.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Objects;
import javax.validation.constraints.*;

/** ConnectApp */
@javax.annotation.Generated(
    value = "io.swagger.codegen.v3.generators.java.JavaJerseyDIServerCodegen",
    date = "2020-05-22T20:43:20.517+02:00[Europe/Paris]")
public class ConnectApp {
  @JsonProperty("account_sid")
  private String accountSid = null;

  @JsonProperty("authorize_redirect_url")
  private String authorizeRedirectUrl = null;

  @JsonProperty("company_name")
  private String companyName = null;

  @JsonProperty("deauthorize_callback_method")
  private String deauthorizeCallbackMethod = null;

  @JsonProperty("deauthorize_callback_url")
  private String deauthorizeCallbackUrl = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("friendly_name")
  private String friendlyName = null;

  @JsonProperty("homepage_url")
  private String homepageUrl = null;

  @JsonProperty("permissions")
  private java.util.List<String> permissions = null;

  @JsonProperty("sid")
  private String sid = null;

  public ConnectApp accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * Get accountSid
   *
   * @return accountSid
   */
  @JsonProperty("account_sid")
  @Schema(description = "")
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }

  public ConnectApp authorizeRedirectUrl(String authorizeRedirectUrl) {
    this.authorizeRedirectUrl = authorizeRedirectUrl;
    return this;
  }

  /**
   * Get authorizeRedirectUrl
   *
   * @return authorizeRedirectUrl
   */
  @JsonProperty("authorize_redirect_url")
  @Schema(description = "")
  public String getAuthorizeRedirectUrl() {
    return authorizeRedirectUrl;
  }

  public void setAuthorizeRedirectUrl(String authorizeRedirectUrl) {
    this.authorizeRedirectUrl = authorizeRedirectUrl;
  }

  public ConnectApp companyName(String companyName) {
    this.companyName = companyName;
    return this;
  }

  /**
   * Get companyName
   *
   * @return companyName
   */
  @JsonProperty("company_name")
  @Schema(description = "")
  public String getCompanyName() {
    return companyName;
  }

  public void setCompanyName(String companyName) {
    this.companyName = companyName;
  }

  public ConnectApp deauthorizeCallbackMethod(String deauthorizeCallbackMethod) {
    this.deauthorizeCallbackMethod = deauthorizeCallbackMethod;
    return this;
  }

  /**
   * Get deauthorizeCallbackMethod
   *
   * @return deauthorizeCallbackMethod
   */
  @JsonProperty("deauthorize_callback_method")
  @Schema(description = "")
  public String getDeauthorizeCallbackMethod() {
    return deauthorizeCallbackMethod;
  }

  public void setDeauthorizeCallbackMethod(String deauthorizeCallbackMethod) {
    this.deauthorizeCallbackMethod = deauthorizeCallbackMethod;
  }

  public ConnectApp deauthorizeCallbackUrl(String deauthorizeCallbackUrl) {
    this.deauthorizeCallbackUrl = deauthorizeCallbackUrl;
    return this;
  }

  /**
   * Get deauthorizeCallbackUrl
   *
   * @return deauthorizeCallbackUrl
   */
  @JsonProperty("deauthorize_callback_url")
  @Schema(description = "")
  public String getDeauthorizeCallbackUrl() {
    return deauthorizeCallbackUrl;
  }

  public void setDeauthorizeCallbackUrl(String deauthorizeCallbackUrl) {
    this.deauthorizeCallbackUrl = deauthorizeCallbackUrl;
  }

  public ConnectApp description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   *
   * @return description
   */
  @JsonProperty("description")
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ConnectApp friendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
    return this;
  }

  /**
   * Get friendlyName
   *
   * @return friendlyName
   */
  @JsonProperty("friendly_name")
  @Schema(description = "")
  public String getFriendlyName() {
    return friendlyName;
  }

  public void setFriendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
  }

  public ConnectApp homepageUrl(String homepageUrl) {
    this.homepageUrl = homepageUrl;
    return this;
  }

  /**
   * Get homepageUrl
   *
   * @return homepageUrl
   */
  @JsonProperty("homepage_url")
  @Schema(description = "")
  public String getHomepageUrl() {
    return homepageUrl;
  }

  public void setHomepageUrl(String homepageUrl) {
    this.homepageUrl = homepageUrl;
  }

  public ConnectApp permissions(java.util.List<String> permissions) {
    this.permissions = permissions;
    return this;
  }

  public ConnectApp addPermissionsItem(String permissionsItem) {
    if (this.permissions == null) {
      this.permissions = new java.util.ArrayList<>();
    }
    this.permissions.add(permissionsItem);
    return this;
  }

  /**
   * Get permissions
   *
   * @return permissions
   */
  @JsonProperty("permissions")
  @Schema(description = "")
  public java.util.List<String> getPermissions() {
    return permissions;
  }

  public void setPermissions(java.util.List<String> permissions) {
    this.permissions = permissions;
  }

  public ConnectApp sid(String sid) {
    this.sid = sid;
    return this;
  }

  /**
   * Get sid
   *
   * @return sid
   */
  @JsonProperty("sid")
  @Schema(description = "")
  public String getSid() {
    return sid;
  }

  public void setSid(String sid) {
    this.sid = sid;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConnectApp connectApp = (ConnectApp) o;
    return Objects.equals(this.accountSid, connectApp.accountSid)
        && Objects.equals(this.authorizeRedirectUrl, connectApp.authorizeRedirectUrl)
        && Objects.equals(this.companyName, connectApp.companyName)
        && Objects.equals(this.deauthorizeCallbackMethod, connectApp.deauthorizeCallbackMethod)
        && Objects.equals(this.deauthorizeCallbackUrl, connectApp.deauthorizeCallbackUrl)
        && Objects.equals(this.description, connectApp.description)
        && Objects.equals(this.friendlyName, connectApp.friendlyName)
        && Objects.equals(this.homepageUrl, connectApp.homepageUrl)
        && Objects.equals(this.permissions, connectApp.permissions)
        && Objects.equals(this.sid, connectApp.sid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(
        accountSid,
        authorizeRedirectUrl,
        companyName,
        deauthorizeCallbackMethod,
        deauthorizeCallbackUrl,
        description,
        friendlyName,
        homepageUrl,
        permissions,
        sid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConnectApp {\n");

    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    authorizeRedirectUrl: ")
        .append(toIndentedString(authorizeRedirectUrl))
        .append("\n");
    sb.append("    companyName: ").append(toIndentedString(companyName)).append("\n");
    sb.append("    deauthorizeCallbackMethod: ")
        .append(toIndentedString(deauthorizeCallbackMethod))
        .append("\n");
    sb.append("    deauthorizeCallbackUrl: ")
        .append(toIndentedString(deauthorizeCallbackUrl))
        .append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    friendlyName: ").append(toIndentedString(friendlyName)).append("\n");
    sb.append("    homepageUrl: ").append(toIndentedString(homepageUrl)).append("\n");
    sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
    sb.append("    sid: ").append(toIndentedString(sid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
